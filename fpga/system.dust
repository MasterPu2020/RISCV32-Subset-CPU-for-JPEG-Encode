// ------------------------------------------------------------------
// Initiate
// ------------------------------------------------------------------

// Reset All Data Memory
x10 = x0 + 0
x30 = x0 + 201 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 52 
x1 = x30 | x31
startwhilemark0_0:
x10 == x1 goto endwhilemark0_0
    mem[x10 + 0] = x0
    x10 = x10 + 1
x0 == x0 goto startwhilemark0_0
endwhilemark0_0:

// initiate huffman table Y C
x1 = 0 + x0
x2 = 250 + x0
x3 = 16 + x0
x4 = 0 + x0
x5 = 11 + x0
x6 = 16 + x0
startwhilemark0_1:
x2 < x1 goto endwhilemark0_1
    mem[x1 + 275] = x0
    mem[x1 + 801] = x0
    x7 = 1 + x0
startwhilemark1_0:
    x7 >= x5 goto endwhilemark1_0
        x8 = x7 + x1
        mem[x8 + 275] = x3
        mem[x8 + 801] = x3
        x7 = x7 + 1
x0 == x0 goto startwhilemark1_0
    endwhilemark1_0:
startwhilemark1_1:
    x7 >= x6 goto endwhilemark1_1
        x8 = x7 + x1
        mem[x8 + 275] = x0
        mem[x8 + 801] = x0
        x7 = x7 + 1
x0 == x0 goto startwhilemark1_1
    endwhilemark1_1:
    x1 = x1 + 16
x0 == x0 goto startwhilemark0_1
endwhilemark0_1:

// initiate quantization table
x1 = 1052 + x0
x2 = 1179 + x0
x30 = x0 + 32 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 0 
x3 = x30 | x31
startwhilemark0_2:
x2 < x1 goto endwhilemark0_2
    mem[x1 + 0] = x3
    x1 = x1 + 1
x0 == x0 goto startwhilemark0_2
endwhilemark0_2:


x1 = x0 + 0
x31 = x0 + 22 
x29 = x0 + -189 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 1196 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 66 
x2 = x31 | x29
mem[x1 + 1214] = x2
x31 = x0 + 22 
x29 = x0 + -149 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 16 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 787 
x3 = x31 | x29
mem[x1 + 1212] = x3
x31 = x0 + 22 
x29 = x0 + -76 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 458 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 1541 
x4 = x31 | x29
mem[x1 + 1211] = x4
x31 = x0 + 22 
x29 = x0 + -37 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 1327 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 213 
x5 = x31 | x29
mem[x1 + 1215] = x5
x6 = x0 + 1
mem[x1 + 26] = x6
mem[x1 + 527] = x6
mem[x1 + 551] = x6
x7 = x0 + 2
mem[x1 + 1] = x7
mem[x1 + 12] = x7
mem[x1 + 276] = x7
mem[x1 + 277] = x7
mem[x1 + 528] = x7
mem[x1 + 538] = x7
mem[x1 + 539] = x7
mem[x1 + 540] = x7
mem[x1 + 801] = x7
mem[x1 + 802] = x7
x8 = x0 + 3
mem[x1 + 2] = x8
mem[x1 + 13] = x8
mem[x1 + 14] = x8
mem[x1 + 15] = x8
mem[x1 + 16] = x8
mem[x1 + 17] = x8
mem[x1 + 278] = x8
mem[x1 + 541] = x8
mem[x1 + 803] = x8
x9 = x0 + 4
mem[x1 + 3] = x9
mem[x1 + 18] = x9
mem[x1 + 27] = x9
mem[x1 + 275] = x9
mem[x1 + 279] = x9
mem[x1 + 292] = x9
mem[x1 + 542] = x9
mem[x1 + 552] = x9
mem[x1 + 804] = x9
mem[x1 + 818] = x9
x10 = x0 + 5
mem[x1 + 4] = x10
mem[x1 + 19] = x10
mem[x1 + 280] = x10
mem[x1 + 293] = x10
mem[x1 + 308] = x10
mem[x1 + 543] = x10
mem[x1 + 805] = x10
mem[x1 + 806] = x10
mem[x1 + 834] = x10
mem[x1 + 850] = x10
x11 = x0 + 6
mem[x1 + 5] = x11
mem[x1 + 20] = x11
mem[x1 + 324] = x11
mem[x1 + 340] = x11
mem[x1 + 529] = x11
mem[x1 + 544] = x11
mem[x1 + 807] = x11
mem[x1 + 819] = x11
mem[x1 + 866] = x11
mem[x1 + 882] = x11
x12 = x0 + 7
mem[x1 + 21] = x12
mem[x1 + 281] = x12
mem[x1 + 294] = x12
mem[x1 + 356] = x12
mem[x1 + 372] = x12
mem[x1 + 545] = x12
mem[x1 + 808] = x12
mem[x1 + 898] = x12
mem[x1 + 914] = x12
x13 = x0 + 8
mem[x1 + 22] = x13
mem[x1 + 282] = x13
mem[x1 + 309] = x13
mem[x1 + 388] = x13
mem[x1 + 546] = x13
mem[x1 + 820] = x13
mem[x1 + 835] = x13
mem[x1 + 851] = x13
mem[x1 + 930] = x13
x14 = x0 + 9
mem[x1 + 23] = x14
mem[x1 + 295] = x14
mem[x1 + 325] = x14
mem[x1 + 404] = x14
mem[x1 + 420] = x14
mem[x1 + 436] = x14
mem[x1 + 547] = x14
mem[x1 + 809] = x14
mem[x1 + 821] = x14
mem[x1 + 867] = x14
mem[x1 + 946] = x14
mem[x1 + 962] = x14
mem[x1 + 978] = x14
mem[x1 + 994] = x14
x15 = x0 + 10
mem[x1 + 24] = x15
mem[x1 + 283] = x15
mem[x1 + 310] = x15
mem[x1 + 341] = x15
mem[x1 + 452] = x15
mem[x1 + 468] = x15
mem[x1 + 548] = x15
mem[x1 + 553] = x15
mem[x1 + 810] = x15
mem[x1 + 836] = x15
mem[x1 + 852] = x15
mem[x1 + 883] = x15
mem[x1 + 1041] = x15
x16 = x0 + 11
mem[x1 + 28] = x16
mem[x1 + 296] = x16
mem[x1 + 357] = x16
mem[x1 + 484] = x16
mem[x1 + 515] = x16
mem[x1 + 549] = x16
mem[x1 + 567] = x16
mem[x1 + 822] = x16
mem[x1 + 899] = x16
mem[x1 + 915] = x16
mem[x1 + 1010] = x16
x17 = x0 + 12
mem[x1 + 41] = x17
mem[x1 + 311] = x17
mem[x1 + 326] = x17
mem[x1 + 373] = x17
mem[x1 + 389] = x17
mem[x1 + 811] = x17
mem[x1 + 823] = x17
mem[x1 + 837] = x17
mem[x1 + 853] = x17
x18 = x0 + 14
mem[x1 + 6] = x18
mem[x1 + 530] = x18
mem[x1 + 1026] = x18
x18 = x0 + 15
mem[x1 + 405] = x18
mem[x1 + 838] = x18
mem[x1 + 1042] = x18
x18 = x0 + 24
mem[x1 + 554] = x18
x18 = x0 + 25
mem[x1 + 555] = x18
x18 = x0 + 26
mem[x1 + 29] = x18
mem[x1 + 583] = x18
x18 = x0 + 27
mem[x1 + 42] = x18
mem[x1 + 599] = x18
x18 = x0 + 28
mem[x1 + 57] = x18
x18 = x0 + 30
mem[x1 + 7] = x18
mem[x1 + 531] = x18
x18 = x0 + 56
mem[x1 + 556] = x18
x18 = x0 + 57
mem[x1 + 568] = x18
x18 = x0 + 58
mem[x1 + 73] = x18
mem[x1 + 615] = x18
x18 = x0 + 59
mem[x1 + 89] = x18
mem[x1 + 631] = x18
x18 = x0 + 62
mem[x1 + 8] = x18
mem[x1 + 532] = x18
x18 = x0 + 120
mem[x1 + 30] = x18
mem[x1 + 557] = x18
x18 = x0 + 121
mem[x1 + 43] = x18
mem[x1 + 647] = x18
x18 = x0 + 122
mem[x1 + 105] = x18
mem[x1 + 663] = x18
x18 = x0 + 123
mem[x1 + 121] = x18
x18 = x0 + 126
mem[x1 + 9] = x18
mem[x1 + 533] = x18
x18 = x0 + 246
mem[x1 + 569] = x18
x18 = x0 + 247
mem[x1 + 584] = x18
x18 = x0 + 248
mem[x1 + 31] = x18
mem[x1 + 600] = x18
x18 = x0 + 249
mem[x1 + 58] = x18
mem[x1 + 679] = x18
x18 = x0 + 250
mem[x1 + 137] = x18
x18 = x0 + 254
mem[x1 + 10] = x18
mem[x1 + 534] = x18
x18 = x0 + 500
mem[x1 + 558] = x18
x18 = x0 + 501
mem[x1 + 570] = x18
x18 = x0 + 502
mem[x1 + 44] = x18
mem[x1 + 616] = x18
x18 = x0 + 503
mem[x1 + 74] = x18
mem[x1 + 695] = x18
x18 = x0 + 504
mem[x1 + 153] = x18
mem[x1 + 711] = x18
x18 = x0 + 505
mem[x1 + 169] = x18
mem[x1 + 727] = x18
x18 = x0 + 506
mem[x1 + 185] = x18
mem[x1 + 743] = x18
x18 = x0 + 510
mem[x1 + 11] = x18
mem[x1 + 535] = x18
x18 = x0 + 1014
mem[x1 + 32] = x18
mem[x1 + 559] = x18
x18 = x0 + 1015
mem[x1 + 59] = x18
mem[x1 + 585] = x18
x18 = x0 + 1016
mem[x1 + 90] = x18
mem[x1 + 601] = x18
x18 = x0 + 1017
mem[x1 + 201] = x18
mem[x1 + 632] = x18
x18 = x0 + 1018
mem[x1 + 217] = x18
mem[x1 + 790] = x18
x18 = x0 + 1022
mem[x1 + 536] = x18
x18 = x0 + 1023
mem[x1 + 1186] = x18
x18 = x0 + 2038
mem[x1 + 45] = x18
mem[x1 + 571] = x18
x18 = x0 + 2039
mem[x1 + 106] = x18
mem[x1 + 648] = x18
x18 = x0 + 2040
mem[x1 + 233] = x18
mem[x1 + 664] = x18
x18 = x0 + 2041
mem[x1 + 264] = x18
mem[x1 + 759] = x18
x18 = x0 + 2046
mem[x1 + 537] = x18
x18 = x0 + 2047
mem[x1 + 1185] = x18
x18 = x18 + 2037
mem[x1 + 60] = x18
mem[x1 + 560] = x18
x19 = x18 + 1
mem[x1 + 75] = x19
mem[x1 + 572] = x19
x19 = x18 + 2
mem[x1 + 122] = x19
mem[x1 + 586] = x19
x19 = x18 + 3
mem[x1 + 138] = x19
mem[x1 + 602] = x19
x19 = x18 + 6
mem[x1 + 1184] = x19
x30 = x0 + 3 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 2005 
x19 = x30 | x31
mem[x1 + 1183] = x19
x30 = x0 + 6 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 580 
x20 = x30 | x31
mem[x1 + 1200] = x20
x30 = x20 + 1468
x31 = x0 + 1718 
x21 = x30 | x31
mem[x1 + 1182] = x21
x22 = x21 + 298
mem[x1 + 775] = x22
x30 = x0 + 14 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1713 
x22 = x30 | x31
mem[x1 + 1181] = x22
x30 = x22 + 335
x31 = x0 + 1984 
x23 = x30 | x31
mem[x1 + 154] = x23
x24 = x23 + 2
mem[x1 + 587] = x24
x24 = x23 + 3
mem[x1 + 791] = x24
x30 = x0 + 22 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1285 
x24 = x30 | x31
mem[x1 + 1198] = x24
x30 = x0 + 25 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 271 
x25 = x30 | x31
mem[x1 + 1180] = x25
x30 = x0 + 31 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1922 
x26 = x30 | x31
mem[x1 + 33] = x26
x27 = x26 + 1
mem[x1 + 34] = x27
x27 = x26 + 2
mem[x1 + 46] = x27
x27 = x26 + 3
mem[x1 + 47] = x27
x27 = x26 + 4
mem[x1 + 48] = x27
x27 = x26 + 5
mem[x1 + 49] = x27
x27 = x26 + 6
mem[x1 + 50] = x27
mem[x1 + 573] = x27
x27 = x26 + 7
mem[x1 + 61] = x27
mem[x1 + 574] = x27
x27 = x26 + 8
mem[x1 + 62] = x27
mem[x1 + 575] = x27
x27 = x26 + 9
mem[x1 + 63] = x27
mem[x1 + 576] = x27
x27 = x26 + 10
mem[x1 + 64] = x27
mem[x1 + 588] = x27
x27 = x26 + 11
mem[x1 + 65] = x27
mem[x1 + 589] = x27
x27 = x26 + 12
mem[x1 + 66] = x27
mem[x1 + 590] = x27
x27 = x26 + 13
mem[x1 + 76] = x27
mem[x1 + 591] = x27
x27 = x26 + 14
mem[x1 + 77] = x27
mem[x1 + 592] = x27
x27 = x26 + 15
mem[x1 + 78] = x27
mem[x1 + 603] = x27
x27 = x26 + 16
mem[x1 + 79] = x27
mem[x1 + 604] = x27
x27 = x26 + 17
mem[x1 + 80] = x27
mem[x1 + 605] = x27
x27 = x26 + 18
mem[x1 + 81] = x27
mem[x1 + 606] = x27
x27 = x26 + 19
mem[x1 + 82] = x27
mem[x1 + 607] = x27
x27 = x26 + 20
mem[x1 + 91] = x27
mem[x1 + 608] = x27
x27 = x26 + 21
mem[x1 + 92] = x27
mem[x1 + 617] = x27
x27 = x26 + 22
mem[x1 + 93] = x27
mem[x1 + 618] = x27
x27 = x26 + 23
mem[x1 + 94] = x27
mem[x1 + 619] = x27
x27 = x26 + 24
mem[x1 + 95] = x27
mem[x1 + 620] = x27
x27 = x26 + 25
mem[x1 + 96] = x27
mem[x1 + 621] = x27
x27 = x26 + 26
mem[x1 + 97] = x27
mem[x1 + 622] = x27
x27 = x26 + 27
mem[x1 + 98] = x27
mem[x1 + 623] = x27
x27 = x26 + 28
mem[x1 + 107] = x27
mem[x1 + 624] = x27
x27 = x26 + 29
mem[x1 + 108] = x27
mem[x1 + 633] = x27
x27 = x26 + 30
mem[x1 + 109] = x27
mem[x1 + 634] = x27
x27 = x26 + 31
mem[x1 + 110] = x27
mem[x1 + 635] = x27
x27 = x26 + 32
mem[x1 + 111] = x27
mem[x1 + 636] = x27
x27 = x26 + 33
mem[x1 + 112] = x27
mem[x1 + 637] = x27
x27 = x26 + 34
mem[x1 + 113] = x27
mem[x1 + 638] = x27
x27 = x26 + 35
mem[x1 + 114] = x27
mem[x1 + 639] = x27
x27 = x26 + 36
mem[x1 + 123] = x27
mem[x1 + 640] = x27
x27 = x26 + 37
mem[x1 + 124] = x27
mem[x1 + 649] = x27
x27 = x26 + 38
mem[x1 + 125] = x27
mem[x1 + 650] = x27
x27 = x26 + 39
mem[x1 + 126] = x27
mem[x1 + 651] = x27
x27 = x26 + 40
mem[x1 + 127] = x27
mem[x1 + 652] = x27
x27 = x26 + 41
mem[x1 + 128] = x27
mem[x1 + 653] = x27
x27 = x26 + 42
mem[x1 + 129] = x27
mem[x1 + 654] = x27
x27 = x26 + 43
mem[x1 + 130] = x27
mem[x1 + 655] = x27
x27 = x26 + 44
mem[x1 + 139] = x27
mem[x1 + 656] = x27
x27 = x26 + 45
mem[x1 + 140] = x27
mem[x1 + 665] = x27
x27 = x26 + 46
mem[x1 + 141] = x27
mem[x1 + 666] = x27
x27 = x26 + 47
mem[x1 + 142] = x27
mem[x1 + 667] = x27
x27 = x26 + 48
mem[x1 + 143] = x27
mem[x1 + 668] = x27
x27 = x26 + 49
mem[x1 + 144] = x27
mem[x1 + 669] = x27
x27 = x26 + 50
mem[x1 + 145] = x27
mem[x1 + 670] = x27
x27 = x26 + 51
mem[x1 + 146] = x27
mem[x1 + 671] = x27
x27 = x26 + 52
mem[x1 + 155] = x27
mem[x1 + 672] = x27
x27 = x26 + 53
mem[x1 + 156] = x27
mem[x1 + 680] = x27
x27 = x26 + 54
mem[x1 + 157] = x27
mem[x1 + 681] = x27
x27 = x26 + 55
mem[x1 + 158] = x27
mem[x1 + 682] = x27
x27 = x26 + 56
mem[x1 + 159] = x27
mem[x1 + 683] = x27
x27 = x26 + 57
mem[x1 + 160] = x27
mem[x1 + 684] = x27
x27 = x26 + 58
mem[x1 + 161] = x27
mem[x1 + 685] = x27
x27 = x26 + 59
mem[x1 + 162] = x27
mem[x1 + 686] = x27
x27 = x26 + 60
mem[x1 + 170] = x27
mem[x1 + 687] = x27
x27 = x26 + 61
mem[x1 + 171] = x27
mem[x1 + 688] = x27
x27 = x26 + 62
mem[x1 + 172] = x27
mem[x1 + 696] = x27
x27 = x26 + 63
mem[x1 + 173] = x27
mem[x1 + 697] = x27
x27 = x26 + 64
mem[x1 + 174] = x27
mem[x1 + 698] = x27
x27 = x26 + 65
mem[x1 + 175] = x27
mem[x1 + 699] = x27
x27 = x26 + 66
mem[x1 + 176] = x27
mem[x1 + 700] = x27
x27 = x26 + 67
mem[x1 + 177] = x27
mem[x1 + 701] = x27
x27 = x26 + 68
mem[x1 + 178] = x27
mem[x1 + 702] = x27
x27 = x26 + 69
mem[x1 + 186] = x27
mem[x1 + 703] = x27
x27 = x26 + 70
mem[x1 + 187] = x27
mem[x1 + 704] = x27
x27 = x26 + 71
mem[x1 + 188] = x27
mem[x1 + 712] = x27
x27 = x26 + 72
mem[x1 + 189] = x27
mem[x1 + 713] = x27
x27 = x26 + 73
mem[x1 + 190] = x27
mem[x1 + 714] = x27
x27 = x26 + 74
mem[x1 + 191] = x27
mem[x1 + 715] = x27
x27 = x26 + 75
mem[x1 + 192] = x27
mem[x1 + 716] = x27
x27 = x26 + 76
mem[x1 + 193] = x27
mem[x1 + 717] = x27
x27 = x26 + 77
mem[x1 + 194] = x27
mem[x1 + 718] = x27
x27 = x26 + 78
mem[x1 + 202] = x27
mem[x1 + 719] = x27
x27 = x26 + 79
mem[x1 + 203] = x27
mem[x1 + 720] = x27
x27 = x26 + 80
mem[x1 + 204] = x27
mem[x1 + 728] = x27
x27 = x26 + 81
mem[x1 + 205] = x27
mem[x1 + 729] = x27
x27 = x26 + 82
mem[x1 + 206] = x27
mem[x1 + 730] = x27
x27 = x26 + 83
mem[x1 + 207] = x27
mem[x1 + 731] = x27
x27 = x26 + 84
mem[x1 + 208] = x27
mem[x1 + 732] = x27
x27 = x26 + 85
mem[x1 + 209] = x27
mem[x1 + 733] = x27
x27 = x26 + 86
mem[x1 + 210] = x27
mem[x1 + 734] = x27
x27 = x26 + 87
mem[x1 + 218] = x27
mem[x1 + 735] = x27
x27 = x26 + 88
mem[x1 + 219] = x27
mem[x1 + 736] = x27
x27 = x26 + 89
mem[x1 + 220] = x27
mem[x1 + 744] = x27
x27 = x26 + 90
mem[x1 + 221] = x27
mem[x1 + 745] = x27
x27 = x26 + 91
mem[x1 + 222] = x27
mem[x1 + 746] = x27
x27 = x26 + 92
mem[x1 + 223] = x27
mem[x1 + 747] = x27
x27 = x26 + 93
mem[x1 + 224] = x27
mem[x1 + 748] = x27
x27 = x26 + 94
mem[x1 + 225] = x27
mem[x1 + 749] = x27
x27 = x26 + 95
mem[x1 + 226] = x27
mem[x1 + 750] = x27
x27 = x26 + 96
mem[x1 + 234] = x27
mem[x1 + 751] = x27
x27 = x26 + 97
mem[x1 + 235] = x27
mem[x1 + 752] = x27
x27 = x26 + 98
mem[x1 + 236] = x27
mem[x1 + 760] = x27
x27 = x26 + 99
mem[x1 + 237] = x27
mem[x1 + 761] = x27
x27 = x26 + 100
mem[x1 + 238] = x27
mem[x1 + 762] = x27
x27 = x26 + 101
mem[x1 + 239] = x27
mem[x1 + 763] = x27
x27 = x26 + 102
mem[x1 + 240] = x27
mem[x1 + 764] = x27
x27 = x26 + 103
mem[x1 + 241] = x27
mem[x1 + 765] = x27
x27 = x26 + 104
mem[x1 + 242] = x27
mem[x1 + 766] = x27
x27 = x26 + 105
mem[x1 + 249] = x27
mem[x1 + 767] = x27
x27 = x26 + 106
mem[x1 + 250] = x27
mem[x1 + 768] = x27
x27 = x26 + 107
mem[x1 + 251] = x27
mem[x1 + 776] = x27
x27 = x26 + 108
mem[x1 + 252] = x27
mem[x1 + 777] = x27
x27 = x26 + 109
mem[x1 + 253] = x27
mem[x1 + 778] = x27
x27 = x26 + 110
mem[x1 + 254] = x27
mem[x1 + 779] = x27
x27 = x26 + 111
mem[x1 + 255] = x27
mem[x1 + 780] = x27
x27 = x26 + 112
mem[x1 + 256] = x27
mem[x1 + 781] = x27
x27 = x26 + 113
mem[x1 + 257] = x27
mem[x1 + 782] = x27
x27 = x26 + 114
mem[x1 + 258] = x27
mem[x1 + 783] = x27
x27 = x26 + 115
mem[x1 + 265] = x27
mem[x1 + 784] = x27
x27 = x26 + 116
mem[x1 + 266] = x27
mem[x1 + 792] = x27
x27 = x26 + 117
mem[x1 + 267] = x27
mem[x1 + 793] = x27
x27 = x26 + 118
mem[x1 + 268] = x27
mem[x1 + 794] = x27
x27 = x26 + 119
mem[x1 + 269] = x27
mem[x1 + 795] = x27
x27 = x26 + 120
mem[x1 + 270] = x27
mem[x1 + 796] = x27
x27 = x26 + 121
mem[x1 + 271] = x27
mem[x1 + 797] = x27
x27 = x26 + 122
mem[x1 + 272] = x27
mem[x1 + 798] = x27
x27 = x26 + 123
mem[x1 + 273] = x27
mem[x1 + 799] = x27
x27 = x26 + 124
mem[x1 + 274] = x27
mem[x1 + 800] = x27
x27 = x26 + 126
mem[x1 + 1199] = x27
x31 = x0 + 22 
x29 = x0 + 50 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 360 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 917 
x27 = x31 | x29
mem[x1 + 1210] = x27
x31 = x0 + 22 
x29 = x0 + 131 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 1196 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 65 
x28 = x31 | x29
mem[x1 + 1208] = x28
x31 = x0 + 22 
x29 = x0 + 224 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 1572 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 1769 
x29 = x31 | x29
mem[x1 + 1213] = x29
x31 = x0 + 22 
x29 = x0 + 288 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 1572 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 1769 
x2 = x31 | x29
mem[x1 + 1209] = x2

x1 = x0 + 0
x1 = x25 + -1471
x2 = x0 + 32
mem[x1 + 0] = x2
mem[x1 + 1] = x2
x30 = x0 + 481 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1807 
x3 = x30 | x31
mem[x1 + 26] = x3
mem[x1 + 27] = x3
mem[x1 + 28] = x3
mem[x1 + 29] = x3
mem[x1 + 30] = x3
mem[x1 + 31] = x3
mem[x1 + 32] = x3
mem[x1 + 33] = x3
mem[x1 + 58] = x3
mem[x1 + 59] = x3
mem[x1 + 60] = x3
mem[x1 + 61] = x3
mem[x1 + 63] = x3
mem[x1 + 64] = x3
mem[x1 + 65] = x3
mem[x1 + 90] = x3
mem[x1 + 91] = x3
mem[x1 + 92] = x3
mem[x1 + 93] = x3
mem[x1 + 94] = x3
mem[x1 + 96] = x3
mem[x1 + 97] = x3
mem[x1 + 122] = x3
mem[x1 + 129] = x3
mem[x1 + 154] = x3
mem[x1 + 161] = x3
mem[x1 + 186] = x3
mem[x1 + 187] = x3
mem[x1 + 188] = x3
mem[x1 + 189] = x3
mem[x1 + 190] = x3
mem[x1 + 192] = x3
mem[x1 + 193] = x3
mem[x1 + 218] = x3
mem[x1 + 219] = x3
mem[x1 + 220] = x3
mem[x1 + 221] = x3
mem[x1 + 223] = x3
mem[x1 + 224] = x3
mem[x1 + 225] = x3
mem[x1 + 250] = x3
mem[x1 + 251] = x3
mem[x1 + 252] = x3
mem[x1 + 253] = x3
mem[x1 + 254] = x3
mem[x1 + 255] = x3
mem[x1 + 256] = x3
mem[x1 + 257] = x3
mem[x1 + 274] = x3
mem[x1 + 275] = x3
mem[x1 + 276] = x3
mem[x1 + 277] = x3
mem[x1 + 278] = x3
mem[x1 + 279] = x3
mem[x1 + 280] = x3
mem[x1 + 281] = x3
mem[x1 + 306] = x3
mem[x1 + 307] = x3
mem[x1 + 308] = x3
mem[x1 + 310] = x3
mem[x1 + 311] = x3
mem[x1 + 312] = x3
mem[x1 + 313] = x3
mem[x1 + 338] = x3
mem[x1 + 339] = x3
mem[x1 + 341] = x3
mem[x1 + 342] = x3
mem[x1 + 343] = x3
mem[x1 + 344] = x3
mem[x1 + 345] = x3
mem[x1 + 370] = x3
mem[x1 + 377] = x3
mem[x1 + 402] = x3
mem[x1 + 409] = x3
mem[x1 + 434] = x3
mem[x1 + 435] = x3
mem[x1 + 437] = x3
mem[x1 + 438] = x3
mem[x1 + 439] = x3
mem[x1 + 440] = x3
mem[x1 + 441] = x3
mem[x1 + 466] = x3
mem[x1 + 467] = x3
mem[x1 + 468] = x3
mem[x1 + 470] = x3
mem[x1 + 471] = x3
mem[x1 + 472] = x3
mem[x1 + 473] = x3
mem[x1 + 498] = x3
mem[x1 + 499] = x3
mem[x1 + 500] = x3
mem[x1 + 501] = x3
mem[x1 + 502] = x3
mem[x1 + 503] = x3
mem[x1 + 504] = x3
mem[x1 + 505] = x3
x30 = x0 + 510 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 0 
x4 = x30 | x31
mem[x1 + 530] = x4
mem[x1 + 531] = x4
mem[x1 + 532] = x4
mem[x1 + 533] = x4
mem[x1 + 534] = x4
mem[x1 + 535] = x4
mem[x1 + 536] = x4
mem[x1 + 537] = x4
mem[x1 + 538] = x4
mem[x1 + 539] = x4
mem[x1 + 540] = x4
mem[x1 + 541] = x4
mem[x1 + 542] = x4
mem[x1 + 543] = x4
mem[x1 + 544] = x4
mem[x1 + 545] = x4
mem[x1 + 562] = x4
mem[x1 + 563] = x4
mem[x1 + 564] = x4
mem[x1 + 565] = x4
mem[x1 + 566] = x4
mem[x1 + 567] = x4
mem[x1 + 568] = x4
mem[x1 + 569] = x4
mem[x1 + 570] = x4
mem[x1 + 571] = x4
mem[x1 + 572] = x4
mem[x1 + 573] = x4
mem[x1 + 574] = x4
mem[x1 + 575] = x4
mem[x1 + 576] = x4
mem[x1 + 577] = x4
mem[x1 + 594] = x4
mem[x1 + 595] = x4
mem[x1 + 596] = x4
mem[x1 + 597] = x4
mem[x1 + 598] = x4
mem[x1 + 599] = x4
mem[x1 + 600] = x4
mem[x1 + 601] = x4
mem[x1 + 602] = x4
mem[x1 + 603] = x4
mem[x1 + 604] = x4
mem[x1 + 605] = x4
mem[x1 + 606] = x4
mem[x1 + 607] = x4
mem[x1 + 608] = x4
mem[x1 + 609] = x4
mem[x1 + 626] = x4
mem[x1 + 627] = x4
mem[x1 + 628] = x4
mem[x1 + 629] = x4
mem[x1 + 630] = x4
mem[x1 + 631] = x4
mem[x1 + 632] = x4
mem[x1 + 633] = x4
mem[x1 + 634] = x4
mem[x1 + 635] = x4
mem[x1 + 636] = x4
mem[x1 + 637] = x4
mem[x1 + 638] = x4
mem[x1 + 639] = x4
mem[x1 + 640] = x4
mem[x1 + 641] = x4
mem[x1 + 658] = x4
mem[x1 + 659] = x4
mem[x1 + 660] = x4
mem[x1 + 661] = x4
mem[x1 + 662] = x4
mem[x1 + 663] = x4
mem[x1 + 664] = x4
mem[x1 + 665] = x4
mem[x1 + 666] = x4
mem[x1 + 667] = x4
mem[x1 + 668] = x4
mem[x1 + 669] = x4
mem[x1 + 670] = x4
mem[x1 + 671] = x4
mem[x1 + 672] = x4
mem[x1 + 673] = x4
mem[x1 + 690] = x4
mem[x1 + 691] = x4
mem[x1 + 692] = x4
mem[x1 + 693] = x4
mem[x1 + 694] = x4
mem[x1 + 695] = x4
mem[x1 + 696] = x4
mem[x1 + 697] = x4
mem[x1 + 698] = x4
mem[x1 + 699] = x4
mem[x1 + 700] = x4
mem[x1 + 701] = x4
mem[x1 + 702] = x4
mem[x1 + 703] = x4
mem[x1 + 704] = x4
mem[x1 + 705] = x4
mem[x1 + 722] = x4
mem[x1 + 723] = x4
mem[x1 + 724] = x4
mem[x1 + 725] = x4
mem[x1 + 726] = x4
mem[x1 + 727] = x4
mem[x1 + 728] = x4
mem[x1 + 729] = x4
mem[x1 + 730] = x4
mem[x1 + 731] = x4
mem[x1 + 732] = x4
mem[x1 + 733] = x4
mem[x1 + 734] = x4
mem[x1 + 735] = x4
mem[x1 + 736] = x4
mem[x1 + 737] = x4
mem[x1 + 754] = x4
mem[x1 + 755] = x4
mem[x1 + 756] = x4
mem[x1 + 757] = x4
mem[x1 + 758] = x4
mem[x1 + 759] = x4
mem[x1 + 760] = x4
mem[x1 + 761] = x4
mem[x1 + 762] = x4
mem[x1 + 763] = x4
mem[x1 + 764] = x4
mem[x1 + 765] = x4
mem[x1 + 766] = x4
mem[x1 + 767] = x4
mem[x1 + 768] = x4
mem[x1 + 769] = x4
mem[x1 + 786] = x4
mem[x1 + 787] = x4
mem[x1 + 788] = x4
mem[x1 + 789] = x4
mem[x1 + 790] = x4
mem[x1 + 791] = x4
mem[x1 + 792] = x4
mem[x1 + 793] = x4
mem[x1 + 794] = x4
mem[x1 + 795] = x4
mem[x1 + 796] = x4
mem[x1 + 797] = x4
mem[x1 + 798] = x4
mem[x1 + 799] = x4
mem[x1 + 800] = x4
mem[x1 + 801] = x4
mem[x1 + 818] = x4
mem[x1 + 819] = x4
mem[x1 + 820] = x4
mem[x1 + 821] = x4
mem[x1 + 822] = x4
mem[x1 + 823] = x4
mem[x1 + 824] = x4
mem[x1 + 825] = x4
mem[x1 + 826] = x4
mem[x1 + 827] = x4
mem[x1 + 828] = x4
mem[x1 + 829] = x4
mem[x1 + 830] = x4
mem[x1 + 831] = x4
mem[x1 + 832] = x4
mem[x1 + 833] = x4
mem[x1 + 850] = x4
mem[x1 + 851] = x4
mem[x1 + 852] = x4
mem[x1 + 853] = x4
mem[x1 + 854] = x4
mem[x1 + 855] = x4
mem[x1 + 856] = x4
mem[x1 + 857] = x4
mem[x1 + 858] = x4
mem[x1 + 859] = x4
mem[x1 + 860] = x4
mem[x1 + 861] = x4
mem[x1 + 862] = x4
mem[x1 + 863] = x4
mem[x1 + 864] = x4
mem[x1 + 865] = x4
mem[x1 + 882] = x4
mem[x1 + 883] = x4
mem[x1 + 884] = x4
mem[x1 + 885] = x4
mem[x1 + 886] = x4
mem[x1 + 887] = x4
mem[x1 + 888] = x4
mem[x1 + 889] = x4
mem[x1 + 890] = x4
mem[x1 + 891] = x4
mem[x1 + 892] = x4
mem[x1 + 893] = x4
mem[x1 + 894] = x4
mem[x1 + 895] = x4
mem[x1 + 896] = x4
mem[x1 + 897] = x4
mem[x1 + 914] = x4
mem[x1 + 915] = x4
mem[x1 + 916] = x4
mem[x1 + 917] = x4
mem[x1 + 918] = x4
mem[x1 + 919] = x4
mem[x1 + 920] = x4
mem[x1 + 921] = x4
mem[x1 + 922] = x4
mem[x1 + 923] = x4
mem[x1 + 924] = x4
mem[x1 + 925] = x4
mem[x1 + 926] = x4
mem[x1 + 927] = x4
mem[x1 + 928] = x4
mem[x1 + 929] = x4
mem[x1 + 946] = x4
mem[x1 + 947] = x4
mem[x1 + 948] = x4
mem[x1 + 949] = x4
mem[x1 + 950] = x4
mem[x1 + 951] = x4
mem[x1 + 952] = x4
mem[x1 + 953] = x4
mem[x1 + 954] = x4
mem[x1 + 955] = x4
mem[x1 + 956] = x4
mem[x1 + 957] = x4
mem[x1 + 958] = x4
mem[x1 + 959] = x4
mem[x1 + 960] = x4
mem[x1 + 961] = x4
mem[x1 + 978] = x4
mem[x1 + 979] = x4
mem[x1 + 980] = x4
mem[x1 + 981] = x4
mem[x1 + 982] = x4
mem[x1 + 983] = x4
mem[x1 + 984] = x4
mem[x1 + 985] = x4
mem[x1 + 986] = x4
mem[x1 + 987] = x4
mem[x1 + 988] = x4
mem[x1 + 989] = x4
mem[x1 + 990] = x4
mem[x1 + 991] = x4
mem[x1 + 992] = x4
mem[x1 + 993] = x4
mem[x1 + 1010] = x4
mem[x1 + 1011] = x4
mem[x1 + 1012] = x4
mem[x1 + 1013] = x4
mem[x1 + 1014] = x4
mem[x1 + 1015] = x4
mem[x1 + 1016] = x4
mem[x1 + 1017] = x4
mem[x1 + 1018] = x4
mem[x1 + 1019] = x4
mem[x1 + 1020] = x4
mem[x1 + 1021] = x4
mem[x1 + 1022] = x4
mem[x1 + 1023] = x4
mem[x1 + 1024] = x4
mem[x1 + 1025] = x4
x30 = x0 + 1927 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1279 
x5 = x30 | x31
mem[x1 + 514] = x5
mem[x1 + 515] = x5
mem[x1 + 516] = x5
mem[x1 + 517] = x5
mem[x1 + 518] = x5
mem[x1 + 519] = x5
mem[x1 + 520] = x5
mem[x1 + 521] = x5
mem[x1 + 522] = x5
mem[x1 + 523] = x5
mem[x1 + 524] = x5
mem[x1 + 525] = x5
mem[x1 + 526] = x5
mem[x1 + 527] = x5
mem[x1 + 528] = x5
mem[x1 + 529] = x5
mem[x1 + 546] = x5
mem[x1 + 547] = x5
mem[x1 + 548] = x5
mem[x1 + 549] = x5
mem[x1 + 550] = x5
mem[x1 + 551] = x5
mem[x1 + 552] = x5
mem[x1 + 553] = x5
mem[x1 + 554] = x5
mem[x1 + 555] = x5
mem[x1 + 556] = x5
mem[x1 + 557] = x5
mem[x1 + 558] = x5
mem[x1 + 559] = x5
mem[x1 + 560] = x5
mem[x1 + 561] = x5
mem[x1 + 578] = x5
mem[x1 + 579] = x5
mem[x1 + 580] = x5
mem[x1 + 581] = x5
mem[x1 + 582] = x5
mem[x1 + 583] = x5
mem[x1 + 584] = x5
mem[x1 + 585] = x5
mem[x1 + 586] = x5
mem[x1 + 587] = x5
mem[x1 + 588] = x5
mem[x1 + 589] = x5
mem[x1 + 590] = x5
mem[x1 + 591] = x5
mem[x1 + 592] = x5
mem[x1 + 593] = x5
mem[x1 + 610] = x5
mem[x1 + 611] = x5
mem[x1 + 612] = x5
mem[x1 + 613] = x5
mem[x1 + 614] = x5
mem[x1 + 615] = x5
mem[x1 + 616] = x5
mem[x1 + 617] = x5
mem[x1 + 618] = x5
mem[x1 + 619] = x5
mem[x1 + 620] = x5
mem[x1 + 621] = x5
mem[x1 + 622] = x5
mem[x1 + 623] = x5
mem[x1 + 624] = x5
mem[x1 + 625] = x5
mem[x1 + 642] = x5
mem[x1 + 643] = x5
mem[x1 + 644] = x5
mem[x1 + 645] = x5
mem[x1 + 646] = x5
mem[x1 + 647] = x5
mem[x1 + 648] = x5
mem[x1 + 649] = x5
mem[x1 + 650] = x5
mem[x1 + 651] = x5
mem[x1 + 652] = x5
mem[x1 + 653] = x5
mem[x1 + 654] = x5
mem[x1 + 655] = x5
mem[x1 + 656] = x5
mem[x1 + 657] = x5
mem[x1 + 674] = x5
mem[x1 + 675] = x5
mem[x1 + 676] = x5
mem[x1 + 677] = x5
mem[x1 + 678] = x5
mem[x1 + 679] = x5
mem[x1 + 680] = x5
mem[x1 + 681] = x5
mem[x1 + 682] = x5
mem[x1 + 683] = x5
mem[x1 + 684] = x5
mem[x1 + 685] = x5
mem[x1 + 686] = x5
mem[x1 + 687] = x5
mem[x1 + 688] = x5
mem[x1 + 689] = x5
mem[x1 + 706] = x5
mem[x1 + 707] = x5
mem[x1 + 708] = x5
mem[x1 + 709] = x5
mem[x1 + 710] = x5
mem[x1 + 711] = x5
mem[x1 + 712] = x5
mem[x1 + 713] = x5
mem[x1 + 714] = x5
mem[x1 + 715] = x5
mem[x1 + 716] = x5
mem[x1 + 717] = x5
mem[x1 + 718] = x5
mem[x1 + 719] = x5
mem[x1 + 720] = x5
mem[x1 + 721] = x5
mem[x1 + 738] = x5
mem[x1 + 739] = x5
mem[x1 + 740] = x5
mem[x1 + 741] = x5
mem[x1 + 742] = x5
mem[x1 + 743] = x5
mem[x1 + 744] = x5
mem[x1 + 745] = x5
mem[x1 + 746] = x5
mem[x1 + 747] = x5
mem[x1 + 748] = x5
mem[x1 + 749] = x5
mem[x1 + 750] = x5
mem[x1 + 751] = x5
mem[x1 + 752] = x5
mem[x1 + 753] = x5
mem[x1 + 770] = x5
mem[x1 + 771] = x5
mem[x1 + 772] = x5
mem[x1 + 773] = x5
mem[x1 + 774] = x5
mem[x1 + 775] = x5
mem[x1 + 776] = x5
mem[x1 + 777] = x5
mem[x1 + 778] = x5
mem[x1 + 779] = x5
mem[x1 + 780] = x5
mem[x1 + 781] = x5
mem[x1 + 782] = x5
mem[x1 + 783] = x5
mem[x1 + 784] = x5
mem[x1 + 785] = x5
mem[x1 + 802] = x5
mem[x1 + 803] = x5
mem[x1 + 804] = x5
mem[x1 + 805] = x5
mem[x1 + 806] = x5
mem[x1 + 807] = x5
mem[x1 + 808] = x5
mem[x1 + 809] = x5
mem[x1 + 810] = x5
mem[x1 + 811] = x5
mem[x1 + 812] = x5
mem[x1 + 813] = x5
mem[x1 + 814] = x5
mem[x1 + 815] = x5
mem[x1 + 816] = x5
mem[x1 + 817] = x5
mem[x1 + 834] = x5
mem[x1 + 835] = x5
mem[x1 + 836] = x5
mem[x1 + 837] = x5
mem[x1 + 838] = x5
mem[x1 + 839] = x5
mem[x1 + 840] = x5
mem[x1 + 841] = x5
mem[x1 + 842] = x5
mem[x1 + 843] = x5
mem[x1 + 844] = x5
mem[x1 + 845] = x5
mem[x1 + 846] = x5
mem[x1 + 847] = x5
mem[x1 + 848] = x5
mem[x1 + 849] = x5
mem[x1 + 866] = x5
mem[x1 + 867] = x5
mem[x1 + 868] = x5
mem[x1 + 869] = x5
mem[x1 + 870] = x5
mem[x1 + 871] = x5
mem[x1 + 872] = x5
mem[x1 + 873] = x5
mem[x1 + 874] = x5
mem[x1 + 875] = x5
mem[x1 + 876] = x5
mem[x1 + 877] = x5
mem[x1 + 878] = x5
mem[x1 + 879] = x5
mem[x1 + 880] = x5
mem[x1 + 881] = x5
mem[x1 + 898] = x5
mem[x1 + 899] = x5
mem[x1 + 900] = x5
mem[x1 + 901] = x5
mem[x1 + 902] = x5
mem[x1 + 903] = x5
mem[x1 + 904] = x5
mem[x1 + 905] = x5
mem[x1 + 906] = x5
mem[x1 + 907] = x5
mem[x1 + 908] = x5
mem[x1 + 909] = x5
mem[x1 + 910] = x5
mem[x1 + 911] = x5
mem[x1 + 912] = x5
mem[x1 + 913] = x5
mem[x1 + 930] = x5
mem[x1 + 931] = x5
mem[x1 + 932] = x5
mem[x1 + 933] = x5
mem[x1 + 934] = x5
mem[x1 + 935] = x5
mem[x1 + 936] = x5
mem[x1 + 937] = x5
mem[x1 + 938] = x5
mem[x1 + 939] = x5
mem[x1 + 940] = x5
mem[x1 + 941] = x5
mem[x1 + 942] = x5
mem[x1 + 943] = x5
mem[x1 + 944] = x5
mem[x1 + 945] = x5
mem[x1 + 962] = x5
mem[x1 + 963] = x5
mem[x1 + 964] = x5
mem[x1 + 965] = x5
mem[x1 + 966] = x5
mem[x1 + 967] = x5
mem[x1 + 968] = x5
mem[x1 + 969] = x5
mem[x1 + 970] = x5
mem[x1 + 971] = x5
mem[x1 + 972] = x5
mem[x1 + 973] = x5
mem[x1 + 974] = x5
mem[x1 + 975] = x5
mem[x1 + 976] = x5
mem[x1 + 977] = x5
mem[x1 + 994] = x5
mem[x1 + 995] = x5
mem[x1 + 996] = x5
mem[x1 + 997] = x5
mem[x1 + 998] = x5
mem[x1 + 999] = x5
mem[x1 + 1000] = x5
mem[x1 + 1001] = x5
mem[x1 + 1002] = x5
mem[x1 + 1003] = x5
mem[x1 + 1004] = x5
mem[x1 + 1005] = x5
mem[x1 + 1006] = x5
mem[x1 + 1007] = x5
mem[x1 + 1008] = x5
mem[x1 + 1009] = x5
x31 = x0 + 22 
x29 = x0 + 3 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 2016 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 0 
x6 = x31 | x29
mem[x1 + 2] = x6
mem[x1 + 3] = x6
mem[x1 + 4] = x6
mem[x1 + 5] = x6
mem[x1 + 6] = x6
mem[x1 + 7] = x6
mem[x1 + 8] = x6
mem[x1 + 9] = x6
mem[x1 + 10] = x6
mem[x1 + 11] = x6
mem[x1 + 12] = x6
mem[x1 + 13] = x6
mem[x1 + 14] = x6
mem[x1 + 15] = x6
mem[x1 + 16] = x6
mem[x1 + 17] = x6
mem[x1 + 34] = x6
mem[x1 + 35] = x6
mem[x1 + 36] = x6
mem[x1 + 37] = x6
mem[x1 + 38] = x6
mem[x1 + 39] = x6
mem[x1 + 40] = x6
mem[x1 + 41] = x6
mem[x1 + 42] = x6
mem[x1 + 43] = x6
mem[x1 + 44] = x6
mem[x1 + 45] = x6
mem[x1 + 46] = x6
mem[x1 + 47] = x6
mem[x1 + 48] = x6
mem[x1 + 49] = x6
mem[x1 + 66] = x6
mem[x1 + 67] = x6
mem[x1 + 68] = x6
mem[x1 + 69] = x6
mem[x1 + 70] = x6
mem[x1 + 71] = x6
mem[x1 + 72] = x6
mem[x1 + 73] = x6
mem[x1 + 74] = x6
mem[x1 + 75] = x6
mem[x1 + 76] = x6
mem[x1 + 77] = x6
mem[x1 + 78] = x6
mem[x1 + 79] = x6
mem[x1 + 80] = x6
mem[x1 + 81] = x6
mem[x1 + 98] = x6
mem[x1 + 99] = x6
mem[x1 + 100] = x6
mem[x1 + 101] = x6
mem[x1 + 102] = x6
mem[x1 + 103] = x6
mem[x1 + 104] = x6
mem[x1 + 105] = x6
mem[x1 + 106] = x6
mem[x1 + 107] = x6
mem[x1 + 108] = x6
mem[x1 + 109] = x6
mem[x1 + 110] = x6
mem[x1 + 111] = x6
mem[x1 + 112] = x6
mem[x1 + 113] = x6
mem[x1 + 130] = x6
mem[x1 + 131] = x6
mem[x1 + 132] = x6
mem[x1 + 133] = x6
mem[x1 + 134] = x6
mem[x1 + 135] = x6
mem[x1 + 136] = x6
mem[x1 + 137] = x6
mem[x1 + 138] = x6
mem[x1 + 139] = x6
mem[x1 + 140] = x6
mem[x1 + 141] = x6
mem[x1 + 142] = x6
mem[x1 + 143] = x6
mem[x1 + 144] = x6
mem[x1 + 145] = x6
mem[x1 + 162] = x6
mem[x1 + 163] = x6
mem[x1 + 164] = x6
mem[x1 + 165] = x6
mem[x1 + 166] = x6
mem[x1 + 167] = x6
mem[x1 + 168] = x6
mem[x1 + 169] = x6
mem[x1 + 170] = x6
mem[x1 + 171] = x6
mem[x1 + 172] = x6
mem[x1 + 173] = x6
mem[x1 + 174] = x6
mem[x1 + 175] = x6
mem[x1 + 176] = x6
mem[x1 + 177] = x6
mem[x1 + 194] = x6
mem[x1 + 195] = x6
mem[x1 + 196] = x6
mem[x1 + 197] = x6
mem[x1 + 198] = x6
mem[x1 + 199] = x6
mem[x1 + 200] = x6
mem[x1 + 201] = x6
mem[x1 + 202] = x6
mem[x1 + 203] = x6
mem[x1 + 204] = x6
mem[x1 + 205] = x6
mem[x1 + 206] = x6
mem[x1 + 207] = x6
mem[x1 + 208] = x6
mem[x1 + 209] = x6
mem[x1 + 226] = x6
mem[x1 + 227] = x6
mem[x1 + 228] = x6
mem[x1 + 229] = x6
mem[x1 + 230] = x6
mem[x1 + 231] = x6
mem[x1 + 232] = x6
mem[x1 + 233] = x6
mem[x1 + 234] = x6
mem[x1 + 235] = x6
mem[x1 + 236] = x6
mem[x1 + 237] = x6
mem[x1 + 238] = x6
mem[x1 + 239] = x6
mem[x1 + 240] = x6
mem[x1 + 241] = x6
mem[x1 + 258] = x6
mem[x1 + 259] = x6
mem[x1 + 260] = x6
mem[x1 + 261] = x6
mem[x1 + 262] = x6
mem[x1 + 263] = x6
mem[x1 + 264] = x6
mem[x1 + 265] = x6
mem[x1 + 266] = x6
mem[x1 + 267] = x6
mem[x1 + 268] = x6
mem[x1 + 269] = x6
mem[x1 + 270] = x6
mem[x1 + 271] = x6
mem[x1 + 272] = x6
mem[x1 + 273] = x6
mem[x1 + 290] = x6
mem[x1 + 291] = x6
mem[x1 + 292] = x6
mem[x1 + 293] = x6
mem[x1 + 294] = x6
mem[x1 + 295] = x6
mem[x1 + 296] = x6
mem[x1 + 297] = x6
mem[x1 + 298] = x6
mem[x1 + 299] = x6
mem[x1 + 300] = x6
mem[x1 + 301] = x6
mem[x1 + 302] = x6
mem[x1 + 303] = x6
mem[x1 + 304] = x6
mem[x1 + 305] = x6
mem[x1 + 322] = x6
mem[x1 + 323] = x6
mem[x1 + 324] = x6
mem[x1 + 325] = x6
mem[x1 + 326] = x6
mem[x1 + 327] = x6
mem[x1 + 328] = x6
mem[x1 + 329] = x6
mem[x1 + 330] = x6
mem[x1 + 331] = x6
mem[x1 + 332] = x6
mem[x1 + 333] = x6
mem[x1 + 334] = x6
mem[x1 + 335] = x6
mem[x1 + 336] = x6
mem[x1 + 337] = x6
mem[x1 + 354] = x6
mem[x1 + 355] = x6
mem[x1 + 356] = x6
mem[x1 + 357] = x6
mem[x1 + 358] = x6
mem[x1 + 359] = x6
mem[x1 + 360] = x6
mem[x1 + 361] = x6
mem[x1 + 362] = x6
mem[x1 + 363] = x6
mem[x1 + 364] = x6
mem[x1 + 365] = x6
mem[x1 + 366] = x6
mem[x1 + 367] = x6
mem[x1 + 368] = x6
mem[x1 + 369] = x6
mem[x1 + 386] = x6
mem[x1 + 387] = x6
mem[x1 + 388] = x6
mem[x1 + 389] = x6
mem[x1 + 390] = x6
mem[x1 + 391] = x6
mem[x1 + 392] = x6
mem[x1 + 393] = x6
mem[x1 + 394] = x6
mem[x1 + 395] = x6
mem[x1 + 396] = x6
mem[x1 + 397] = x6
mem[x1 + 398] = x6
mem[x1 + 399] = x6
mem[x1 + 400] = x6
mem[x1 + 401] = x6
mem[x1 + 418] = x6
mem[x1 + 419] = x6
mem[x1 + 420] = x6
mem[x1 + 421] = x6
mem[x1 + 422] = x6
mem[x1 + 423] = x6
mem[x1 + 424] = x6
mem[x1 + 425] = x6
mem[x1 + 426] = x6
mem[x1 + 427] = x6
mem[x1 + 428] = x6
mem[x1 + 429] = x6
mem[x1 + 430] = x6
mem[x1 + 431] = x6
mem[x1 + 432] = x6
mem[x1 + 433] = x6
mem[x1 + 450] = x6
mem[x1 + 451] = x6
mem[x1 + 452] = x6
mem[x1 + 453] = x6
mem[x1 + 454] = x6
mem[x1 + 455] = x6
mem[x1 + 456] = x6
mem[x1 + 457] = x6
mem[x1 + 458] = x6
mem[x1 + 459] = x6
mem[x1 + 460] = x6
mem[x1 + 461] = x6
mem[x1 + 462] = x6
mem[x1 + 463] = x6
mem[x1 + 464] = x6
mem[x1 + 465] = x6
mem[x1 + 482] = x6
mem[x1 + 483] = x6
mem[x1 + 484] = x6
mem[x1 + 485] = x6
mem[x1 + 486] = x6
mem[x1 + 487] = x6
mem[x1 + 488] = x6
mem[x1 + 489] = x6
mem[x1 + 490] = x6
mem[x1 + 491] = x6
mem[x1 + 492] = x6
mem[x1 + 493] = x6
mem[x1 + 494] = x6
mem[x1 + 495] = x6
mem[x1 + 496] = x6
mem[x1 + 497] = x6
x31 = x0 + 22 
x29 = x0 + 3 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 2047 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 2047 
x7 = x31 | x29
mem[x1 + 18] = x7
mem[x1 + 19] = x7
mem[x1 + 20] = x7
mem[x1 + 21] = x7
mem[x1 + 22] = x7
mem[x1 + 23] = x7
mem[x1 + 24] = x7
mem[x1 + 25] = x7
mem[x1 + 50] = x7
mem[x1 + 51] = x7
mem[x1 + 52] = x7
mem[x1 + 53] = x7
mem[x1 + 54] = x7
mem[x1 + 55] = x7
mem[x1 + 56] = x7
mem[x1 + 57] = x7
mem[x1 + 62] = x7
mem[x1 + 82] = x7
mem[x1 + 83] = x7
mem[x1 + 84] = x7
mem[x1 + 85] = x7
mem[x1 + 86] = x7
mem[x1 + 87] = x7
mem[x1 + 88] = x7
mem[x1 + 89] = x7
mem[x1 + 95] = x7
mem[x1 + 114] = x7
mem[x1 + 115] = x7
mem[x1 + 116] = x7
mem[x1 + 117] = x7
mem[x1 + 118] = x7
mem[x1 + 119] = x7
mem[x1 + 120] = x7
mem[x1 + 121] = x7
mem[x1 + 123] = x7
mem[x1 + 124] = x7
mem[x1 + 125] = x7
mem[x1 + 126] = x7
mem[x1 + 127] = x7
mem[x1 + 128] = x7
mem[x1 + 146] = x7
mem[x1 + 147] = x7
mem[x1 + 148] = x7
mem[x1 + 149] = x7
mem[x1 + 150] = x7
mem[x1 + 151] = x7
mem[x1 + 152] = x7
mem[x1 + 153] = x7
mem[x1 + 155] = x7
mem[x1 + 156] = x7
mem[x1 + 157] = x7
mem[x1 + 158] = x7
mem[x1 + 159] = x7
mem[x1 + 160] = x7
mem[x1 + 178] = x7
mem[x1 + 179] = x7
mem[x1 + 180] = x7
mem[x1 + 181] = x7
mem[x1 + 182] = x7
mem[x1 + 183] = x7
mem[x1 + 184] = x7
mem[x1 + 185] = x7
mem[x1 + 191] = x7
mem[x1 + 210] = x7
mem[x1 + 211] = x7
mem[x1 + 212] = x7
mem[x1 + 213] = x7
mem[x1 + 214] = x7
mem[x1 + 215] = x7
mem[x1 + 216] = x7
mem[x1 + 217] = x7
mem[x1 + 222] = x7
mem[x1 + 242] = x7
mem[x1 + 243] = x7
mem[x1 + 244] = x7
mem[x1 + 245] = x7
mem[x1 + 246] = x7
mem[x1 + 247] = x7
mem[x1 + 248] = x7
mem[x1 + 249] = x7
mem[x1 + 282] = x7
mem[x1 + 283] = x7
mem[x1 + 284] = x7
mem[x1 + 285] = x7
mem[x1 + 286] = x7
mem[x1 + 287] = x7
mem[x1 + 288] = x7
mem[x1 + 289] = x7
mem[x1 + 309] = x7
mem[x1 + 314] = x7
mem[x1 + 315] = x7
mem[x1 + 316] = x7
mem[x1 + 317] = x7
mem[x1 + 318] = x7
mem[x1 + 319] = x7
mem[x1 + 320] = x7
mem[x1 + 321] = x7
mem[x1 + 340] = x7
mem[x1 + 346] = x7
mem[x1 + 347] = x7
mem[x1 + 348] = x7
mem[x1 + 349] = x7
mem[x1 + 350] = x7
mem[x1 + 351] = x7
mem[x1 + 352] = x7
mem[x1 + 353] = x7
mem[x1 + 371] = x7
mem[x1 + 372] = x7
mem[x1 + 373] = x7
mem[x1 + 374] = x7
mem[x1 + 375] = x7
mem[x1 + 376] = x7
mem[x1 + 378] = x7
mem[x1 + 379] = x7
mem[x1 + 380] = x7
mem[x1 + 381] = x7
mem[x1 + 382] = x7
mem[x1 + 383] = x7
mem[x1 + 384] = x7
mem[x1 + 385] = x7
mem[x1 + 403] = x7
mem[x1 + 404] = x7
mem[x1 + 405] = x7
mem[x1 + 406] = x7
mem[x1 + 407] = x7
mem[x1 + 408] = x7
mem[x1 + 410] = x7
mem[x1 + 411] = x7
mem[x1 + 412] = x7
mem[x1 + 413] = x7
mem[x1 + 414] = x7
mem[x1 + 415] = x7
mem[x1 + 416] = x7
mem[x1 + 417] = x7
mem[x1 + 436] = x7
mem[x1 + 442] = x7
mem[x1 + 443] = x7
mem[x1 + 444] = x7
mem[x1 + 445] = x7
mem[x1 + 446] = x7
mem[x1 + 447] = x7
mem[x1 + 448] = x7
mem[x1 + 449] = x7
mem[x1 + 469] = x7
mem[x1 + 474] = x7
mem[x1 + 475] = x7
mem[x1 + 476] = x7
mem[x1 + 477] = x7
mem[x1 + 478] = x7
mem[x1 + 479] = x7
mem[x1 + 480] = x7
mem[x1 + 481] = x7
mem[x1 + 506] = x7
mem[x1 + 507] = x7
mem[x1 + 508] = x7
mem[x1 + 509] = x7
mem[x1 + 510] = x7
mem[x1 + 511] = x7
mem[x1 + 512] = x7
mem[x1 + 513] = x7

// ------------------------------------------------------------------
// SoC sub-units management
// ------------------------------------------------------------------

systemwait:
x30 = x0 + 48 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1697 
x1 = x30 | x31
x2 = mem[x1 + 0] // read button[0] request
x3 = x0 + 1
x3 == x2 goto Main // start main function
x0 == x0 goto systemwait

// Main function
Main:
// ------------------------------------------------------------------
// RegFile Work Aera 1: Re-Order Minimum coded (MCU)
// Avialiable register remaind: x23
// ------------------------------------------------------------------
// blocks: 1216 Y 1280 U 1344 V 1408 Block 1472 MidBlock
x30 = x0 + 24 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 848 
x20 = x30 | x31
x21 = x0 + 2000
x28 = mem[x20 + 0]
x29 = mem[x20 + 1]
mem[x0 + 1187] = x28
mem[x0 + 1188] = x29
x1 = x0 + 4
x28 = x28 >> x1
x27 = x29 >> x1
mem[x0 + 1189] = x28
mem[x0 + 1190] = x27

x1 = x0 + 0
x2 = x0 + 0
x3 = x0 + 0
x4 = x0 + 0
x5 = x0 + 0
x6 = x0 + 0
x26 = x0 + 16
x25 = x0 + 8
x24 = x0 + 2

startwhilemark0_3:
x2 == x28 goto endwhilemark0_3
    x10 = x26 *l x29
    x10 = x10 *l x2
    x10 = x10 + 2
startwhilemark1_2:
    x1 == x27 goto endwhilemark1_2
        x11 = x26 *l x1
        x11 = x11 + x10
startwhilemark2_0:
        x4 == x24 goto endwhilemark2_0
            x12 = x25 *l x29
            x12 = x12 *l x4 
            x12 = x12 + x11
startwhilemark3_0:
            x3 == x24 goto endwhilemark3_0
                x13 = x25 *l x3
                x13 = x13 + x12
startwhilemark4_0:
                x5 == x25 goto endwhilemark4_0
                    x14 = x5 + x13
startwhilemark5_0:
                    x6 == x25 goto endwhilemark5_0
                        x15 = x29 *l x6
                        x15 = x15 + x14
                        x15 = x20 + x15
                        x19 = 255 + x0
                        x16 = mem[x15 + 0] // uart[x15]
                        x16 = x16 >> x26
                        x16 = x16 & x19
                        x17 = mem[x15 + 0] // uart[x15]
                        x17 = x17 >> x25
                        x17 = x17 & x19
                        x18 = mem[x15 + 0] // uart[x15]
                        x18 = x18 & x19
                        x19 = mem[x0 + 1208]
                        x19 = x19 *h x16
                        x30 = mem[x0 + 1209]
                        x30 = x30 *h x17
                        x19 = x19 + x30
                        x30 = mem[x0 + 1210]
                        x30 = x30 *h x18
                        x19 = x19 + x30
                        x19 = x19 + 16
                        x22 = x19 + 0  // Y
                        x19 = mem[x0 + 1211]
                        x19 = x19 *h x16
                        x30 = mem[x0 + 1212]
                        x30 = x30 *h x17
                        x19 = x19 + x30
                        x30 = mem[x0 + 1213]
                        x30 = x30 *h x18
                        x19 = x19 + x30
                        x19 = x19 + 128
                        x19 = x19 << x25
                        x22 = x19 + x22 // Cb
                        x19 = mem[x0 + 1214]
                        x19 = x19 *h x17
                        x30 = mem[x0 + 1213]
                        x30 = x30 *h x16 
                        x19 = x19 + x30
                        x30 = mem[x0 + 1215]
                        x30 = x30 *h x18
                        x19 = x19 + x30
                        x19 = x19 + 128
                        x19 = x19 << x26
                        x22 = x19 + x22 // Cr
                        mem[x21 + 0] = x22
                        x21 = x21 + 1

                        x6 = x6 + 1
x0 == x0 goto startwhilemark5_0
                    endwhilemark5_0:
                    x6 = 0 + x0
                    x5 = x5 + 1
x0 == x0 goto startwhilemark4_0
                endwhilemark4_0:
                x5 = 0 + x0
                x3 = x3 + 1
x0 == x0 goto startwhilemark3_0
            endwhilemark3_0:
            x3 = 0 + x0
            x4 = x4 + 1
x0 == x0 goto startwhilemark2_0
        endwhilemark2_0:
        x4 = 0 + x0
        x1 = x1 + 1
x0 == x0 goto startwhilemark1_2
    endwhilemark1_2:
    x1 = 0 + x0
    x2 = x2 + 1
x0 == x0 goto startwhilemark0_3
endwhilemark0_3:

// clear pixel bit map
x30 = x0 + 24 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 848 
x10 = x30 | x31
x30 = x0 + 48 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1696 
x11 = x30 | x31
startwhilemark0_4:
x10 == x11 goto endwhilemark0_4
    mem[x10 + 0] = x0
    x10 = x10 + 1
x0 == x0 goto startwhilemark0_4
endwhilemark0_4:

// ------------------------------------------------------------------
// RegFile Work Aera 2: Block Process and Huffman endcode
// ------------------------------------------------------------------

// Function used regiters
x26 = x0 + 32
x30 = x0 + 24 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 848 
x25 = x30 | x31
// x28 return key and mode
// x29 differential DC value

// Function Entry
x0 == x0 goto EndBlockProcess
BlockProcess:

// ------------------------------------
// 8x8 matrix subtraction: Sub Area 1
// ------------------------------------

x1 = 0 + x0
x2 = 64 + x0
startwhilemark0_5:
x1 == x2 goto endwhilemark0_5
    x3 = mem[x1 + 1408]
    x3 = x3 + -128
    mem[x1 + 1472] = x3
    mem[x1 + 1408] = x0
    x1 = x1 + 1
x0 == x0 goto startwhilemark0_5
endwhilemark0_5:

// ------------------------------------
// Discrete Cosine Transform: Sub Area 2
// ------------------------------------
// SubFunction: CORDIC cosine
x0 == x0 goto ENDCORDIC
CORDIC:
    x8 = 0 + x0
x30 = x0 + 100 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1087 
x20 = x30 | x31
x30 = x0 + -202 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 1921 
x21 = x30 | x31
x30 = x0 + 50 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 544 
x22 = x30 | x31
startwhilemark0_6:
    x20 >= x9 goto endwhilemark0_6 
        x9 = x9 + x21
x0 == x0 goto startwhilemark0_6
    endwhilemark0_6:
    x22 >= x9 goto endifmark0_0
        x8 = 1 + x0
        x20 = x20 ^ -1
        x20 = x20 + 1
        x9 = x9 + x20
        x0 == x0 goto endelse2
    endifmark0_0:
        x22 = x22 ^ -1 
        x22 = x22 + 1
        x9 >= x22 goto endifmark0_1
            x8 = 1 + x0
            x9 = x9 + x20
        endifmark0_1:
    endelse2:
    x10 = 0 + x0
    mem[x0 + 1191] = x0
    mem[x0 + 1192] = x0
    mem[x0 + 1193] = x0
    mem[x0 + 1194] = x0
    mem[x0 + 1195] = x0
    mem[x0 + 1196] = x0
    mem[x0 + 1197] = x0
    x7 = 0 + x0
    x22 = 7 + x0
startwhilemark0_7:
    x7 == x22 goto endwhilemark0_7
        x9 >= x10 goto endifmark0_2
            x20 = mem[x7 + 1180]
            x20 = x20 ^ -1
            x20 = x20 + 1
            x10 = x10 + x20
            x21 = 1 + x0
            mem[x7 + 1191] = x21
            x0 == x0 goto endelse3
        endifmark0_2:
            x20 = mem[x7 + 1180]
            x10 = x10 + x20
            mem[x7 + 1191] = x0
        endelse3:
        x7 = x7 + 1
x0 == x0 goto startwhilemark0_7
    endwhilemark0_7:
x30 = x0 + 19 
x31 = x0 + 11 
x30 = x30 << x31
x31 = x0 + 885 
x1 = x30 | x31
    x2 = 0 + x0
    x7 = 6 + x0
    x21 = 1 + x0
    x23 = -1 + x0
startwhilemark0_8:
    x7 == x23 goto endwhilemark0_8
        x20 = mem[x7 + 1191]
        x22 = x2 >> x7
        x20 != x21 goto endifmark0_3
            x22 = x22 ^ -1
            x22 = x22 + 1
            x1 = x1 + x22
            x22 = x1 >> x7
            x0 == x0 goto endelse4
        endifmark0_3:
            x1 = x1 + x22
            x22 = x1 >> x7
            x22 = x22 ^ -1
            x22 = x22 + 1
        endelse4:
        x2 = x22 + x2
        x7 = x7 + -1
x0 == x0 goto startwhilemark0_8
    endwhilemark0_8:
    x8 != x21 goto endifmark0_4
        x1 = x1 ^ -1
        x1 = x1 + 1
    endifmark0_4:
// CORDIC return gate
// return key: x24
x21 = 1 + x0
x24 == x0 goto CORDICGate0
x24 == x21 goto CORDICGate1
ENDCORDIC:

// DCT
x15 = 8 + x0
x17 = 2 + x0
x3 = 0 + x0
x4 = 0 + x0
x5 = 0 + x0
x6 = 0 + x0
startwhilemark0_9:
x3 == x15 goto endwhilemark0_9
    x3 != x0 goto endifmark0_5
        x11 = mem[x0 + 1198]
        x0 == x0 goto endelse5
    endifmark0_5:
        x11 = mem[x0 + 1199]
    endelse5:
startwhilemark1_3:
    x4 == x15 goto endwhilemark1_3
        x4 != x0 goto endifmark0_6
            x12 = mem[x0 + 1198]
            x0 == x0 goto endelse6
        endifmark0_6:
            x12 = mem[x0 + 1199]
        endelse6:
        x14 = 0 + x0
startwhilemark2_1:
        x5 == x15 goto endwhilemark2_1
startwhilemark3_1:
            x6 == x15 goto endwhilemark3_1
                x16 = x5 *l x15
                x16 = x16 + x6
                x13 = mem[x16 + 1472]
                x9 = x17 *l x5
                x9 = x9 + 1
                x9 = x9 *l x3
                x23 = mem[x0 + 1200]
                x9 = x9 *l x23
                x24 = 0 + x0 // return key
                x0 == x0 goto CORDIC // call function
                CORDICGate0: // return gate
                x13 = x13 *l x1
                x13 = x13 >> x15
                x9 = x17 *l x6
                x9 = x9 + 1
                x9 = x9 *l x4
                x23 = mem[x0 + 1200]
                x9 = x9 *l x23
                x24 = 1 + x0// return key
                x0 == x0 goto CORDIC // call function
                CORDICGate1: // return gate
                x13 = x13 *l x1
                x13 = x13 >> x15
                x14 = x14 + x13
                x6 = x6 + 1
x0 == x0 goto startwhilemark3_1
            endwhilemark3_1:
            x6 = 0 + x0
            x5 = x5 + 1
x0 == x0 goto startwhilemark2_1
        endwhilemark2_1:
        x16 = x11 *h x12
        x13 = x11 *l x12
x31 = x0 + 22 
x29 = x0 + 511 
x29 = x29 << x31
x31 = x0 + 11 
x30 = x0 + 2047 
x30 = x30 << x31
x29 = x30 | x29
x31 = x0 + 2047 
x21 = x31 | x29
        x13 = x13 & x21
        x18 = 15 + x0
        x16 = x16 << x18
        x18 = x18 + 1
        x13 = x13 >> x18
        x13 = x13 | x16
        x13 = x13 *h x14
        x18 = 3 + x0
        x13 = x13 >> x18
        x13 == x0 goto endifmark0_7
            x13 = x13 + 1
        endifmark0_7:
        x16 = x3 *l x15
        x16 = x4 + x16
        mem[x16 + 1408] = x13
        x5 = 0 + x0
        x4 = x4 + 1
x0 == x0 goto startwhilemark1_3
    endwhilemark1_3:
    x4 = 0 + x0
    x3 = x3 + 1
x0 == x0 goto startwhilemark0_9
endwhilemark0_9:

// ------------------------------------
// Quantization: Sub Area 3
// ------------------------------------

x2 = 1052 + x0
x28 != x0 goto endifmark0_8
    x2 = 1116 + x0
endifmark0_8:
x1 = 0 + x0
x5 = 64 + x0 
x7 = 16 + x0
startwhilemark0_10:
x1 == x5 goto endwhilemark0_10
    x6 = x1 + x2
    x3 = mem[x6 + 0]
    x4 = mem[x1 + 1408]
    x3 = x3 *l x4
    x3 = x3 >> x7
    mem[x1 + 1408] = x0
    mem[x1 + 1472] = x3
    x1 = x1 + 1
x0 == x0 goto startwhilemark0_10
endwhilemark0_10:

// ------------------------------------
// Zigzag Scan: Sub Area 4
// ------------------------------------

x1 = 0 + x0
x2 = 0 + x0
x5 = 0 + x0
x3 = 1 + x0
x4 = 0 + x0
x6 = 7 + x0
x7 = 8 + x0
x9 = 1 + x0
// Differential DC Value:
x29 = mem[x28 + 1204]
x27 = mem[x0 + 1472]
x29 = x29 ^ -1
x29 = x29 + 1
x11 = x27 + x29
mem[x28 + 1204] = x27
mem[x0 + 1408] = x11
startwhilemark0_11:
x0 != x0 goto endwhilemark0_11
    // special if structure
    x1 == x0 goto iformark0
    x1 == x6 goto iformark0
    x0 == x0 goto endiformark0
    iformark0:
        x2 = x2 + 1
        x4 = 1 + x0
        x0 == x0 goto endelseifmark0
    endiformark0:
    x2 == x0 goto iformark1
    x2 == x6 goto iformark1
    x0 == x0 goto endelseifmark0
    iformark1:
        x1 = x1 + 1
        x4 = 1 + x0
    endelseifmark0:
    x4 != x9 goto endifmark0_9
        x4 = 0 + x0
        x3 = x3 ^ -1
        x3 = x3 + 1
        x5 = x5 + 1
        x12 = x2 *l x7
        x12 = x12 + x1
        x11 = mem[x12 + 1472]
        mem[x5 + 1408] = x11
    endifmark0_9:
    // if x1 == x6 and x2 == x6:
    x2 != x6 goto ifandmark0
    x1 != x6 goto ifandmark0
        x0 == x0 goto breakmark0
    ifandmark0:
    x5  = x5  + 1
    x13 = x3  ^ -1
    x13 = x13 + 1
    x1  = x13 + x1
    x2  = x2  + x3
    x12 = x2 *l x7
    x12 = x12 + x1
    x11 = mem[x12 + 1472]
    mem[x5 + 1408] = x11
x0 == x0 goto startwhilemark0_11
endwhilemark0_11:
breakmark0:

// ------------------------------------
// Huffman Encode: Sub Area 6
// ------------------------------------

// 0 for Luminace
x28 != x0 goto endifmark0_10
    x10 = 0 + x0
    x11 = 12 + x0
    x12 = 24 + x0
    x13 = 275 + x0
    x0 == x0 goto endelse7
endifmark0_10:
    x10 = 526 + x0
    x11 = 538 + x0
    x12 = 550 + x0
    x13 = 801 + x0
endelse7:

// SubFunction: Get data and size
x0 == x0 goto EndGetDataAndSize
GetDataAndSize:
    x14 = 0 + x0
    x15 = 0 + x0
    x17 = 1 + x0
    x1 >= x0 goto endifmark0_11 // x1: data < 0 then -x1
        x1 = x1 ^ -1
        x1 = x1 + 1
        x15 = 1 + x0 // less than 1 flag
    endifmark0_11:
    x2 = x1 + 0 // x2: data
startwhilemark0_12:
    x1 == x0 goto endwhilemark0_12
        x1 = x1 >> x17 // x1 >> 1
        x14 = x14 + 1
x0 == x0 goto startwhilemark0_12
    endwhilemark0_12:
    x3 = x14 + 0
    x15 != x17 goto endifmark0_12
        x16 = 0 + x0
startwhilemark0_13:
        x14 == x0 goto endwhilemark0_13
            x16 = x16 << x17
            x16 = x16 + 1
            x14 = x14 + -1
x0 == x0 goto startwhilemark0_13
        endwhilemark0_13:
        x2 = x2 ^ -1
        x2 = x2 & x16
    endifmark0_12:

// Get data and size return gate
// return key: x24
x19 = 1 + x0
x24 == x0 goto GetDataAndSizeReturnGate0
x24 == x19 goto GetDataAndSizeReturnGate1
EndGetDataAndSize:

// SubFunction: Push Huffman bit stack
x0 == x0 goto EndPushHuffmanBitStack
PushHuffmanBitStack:
    x14 = mem[x25 + 0]
    x26 < x5 goto endifmark0_13 // stack spave >= push size
        x5 = x5 ^ -1
        x5 = x5 + 1
        x18 = x26 + x5
        x18 = x4 << x18 // push data
        x14 = x14 + x18
        mem[x25 + 0] = x14
        x26 = x26 + x5
        x0 == x0 goto endelse8
    endifmark0_13:
        x19 = x26 ^ -1
        x19 = x19 + 1
        x18 = x5 + x19 // push size - stack space
        x18 = x4 >> x18 // push data >> 
        x14 = x14 | x18 // last data | push data
        mem[x25 + 0] = x14 // fill the former space
        x5 = x5 + x19 // rest push size
        x15 = x5 + 0
        x16 = 0 + x0
        x19 = x0 + 1
startwhilemark0_14:
        x15 == x0 goto endwhilemark0_14
            x16 = x16 << x19
            x16 = x16 + 1
            x15 = x15 + -1
x0 == x0 goto startwhilemark0_14
        endwhilemark0_14:
        x16 = x16 & x4 // trim the push data
        x19 = x5 ^ -1
        x19 = x19 + 1
        x26 = 32 + x19 // rest space
        x17 = x16 << x26 // new data
        x25 = x25 + 1
        mem[x25 + 0] = x17
    endelse8:

// Push Huffman bit stack return gate
// return key: x23
x19 = 1 + x0
x18 = 2 + x0
x5 = 3 + x0
x23 == x0 goto PushHuffmanBitStackReturnGate0
x23 == x19 goto PushHuffmanBitStackReturnGate1
x23 == x18 goto PushHuffmanBitStackReturnGate2
x23 == x5 goto PushHuffmanBitStackReturnGate3
EndPushHuffmanBitStack:

// DC
x1 = mem[x0 + 1408]
x24 = x0 + 0
x0 == x0 goto GetDataAndSize
GetDataAndSizeReturnGate0:
x14 = x10 + x3
x6 = mem[x14 + 0]
x14 = x11 + x3
x7 = mem[x14 + 0]
x4 = x6 << x3
x4 = x4 + x2
x5 = x3 + x7
x23 = x0 + 0
x0 == x0 goto PushHuffmanBitStack
PushHuffmanBitStackReturnGate0:

// AC
x9 = 0 + x0
x20 = 1 + x0
x21 = 64 + x0
x22 = 15 + x0
startwhilemark0_15:
x20 == x21 goto endwhilemark0_15
    x15 = mem[x20 + 1408]
    x15 != x0 goto endifmark0_14
        x9 = x9 + 1
        x0 == x0 goto endelse9
    endifmark0_14:
startwhilemark1_4:
        x22 >= x9 goto endwhilemark1_4 // zeros over than 15
            x9 = x9 + -16
            x4 = mem[x12 + 240]
            x5 = mem[x13 + 240]
            x23 = x0 + 1
            x0 == x0 goto PushHuffmanBitStack
            PushHuffmanBitStackReturnGate1:
x0 == x0 goto startwhilemark1_4
        endwhilemark1_4:
        // Assembly
        x1 = mem[x20 + 1408]
        x24 = x0 + 1
        x0 == x0 goto GetDataAndSize
        GetDataAndSizeReturnGate1:
x17 = x0 + 4
        x8 = x9 << x17
        x8 = x8 + x3
        x14 = x12 + x8
        x6 = mem[x14 + 0]
        x14 = x13 + x8
        x7 = mem[x14 + 0]
        x4 = x6 << x3
        x4 = x4 + x2
        x5 = x3 + x7
        x23 = x0 + 2
        x0 == x0 goto PushHuffmanBitStack
        PushHuffmanBitStackReturnGate2:
        x9 = 0 + x0
    endelse9:
    x20 = x20 + 1
x0 == x0 goto startwhilemark0_15
endwhilemark0_15:

// EOB
x9 == x0 goto endifmark0_15
    x4 = mem[x12 + 0]
    x5 = mem[x13 + 0]
    x23 = x0 + 3
    x0 == x0 goto PushHuffmanBitStack
    PushHuffmanBitStackReturnGate3:
endifmark0_15:

// ------------------------------------
// Function Return Gate
// ------------------------------------

x1 = 0 + x0
x2 = 1 + x0
x3 = 2 + x0
x28 == x1 goto BlockProcessReturnGate0
x28 == x2 goto BlockProcessReturnGate1
x28 == x3 goto BlockProcessReturnGate2
EndBlockProcess:

// ------------------------------------------------------------------
// RegFile Work Aera 3: Sampling
// ------------------------------------------------------------------

mem[x0 + 1201] = x0
mem[x0 + 1202] = x0
mem[x0 + 1203] = x0
mem[x0 + 1204] = x0
mem[x0 + 1205] = x0
mem[x0 + 1206] = x0
x1 = 256 + x0 // 16 * 16
x2 = mem[x0 + 1189]
x1 = x1 *l x2
x2 = mem[x0 + 1190]
x4 = x1 *l x2
mem[x0 + 1207] = x4
x1 = 0 + x0
x2 = 0 + x0
x3 = 0 + x0

startwhilemark0_16:
x1 == x4 goto endwhilemark0_16
    x6 = mem[x1 + 2000]
    x10 = 255 + x0
    x11 = 8 + x0
    x12 = 16 + x0
    x6 = x10 & x6
    mem[x2 + 1216] = x6
    x6 = mem[x1 + 2000]
    x6 = x6 >> x11
    x6 = x6 & x10
    x7 = mem[x2 + 1280]
    x6 = x6 + x7
    mem[x2 + 1280] = x6
    x6 = mem[x1 + 2000]
    x7 = mem[x2 + 1344]
    x6 = x6 >> x12
    x6 = x6 & x10
    x6 = x6 + x7
    mem[x2 + 1344] = x6
    x6 = 63 + x0
    x2 != x6 goto endifmark0_16
        mem[x0 + 1201] = x1
        mem[x0 + 1203] = x3
        x6 = 64 + x0
        x7 = 0 + x0
startwhilemark1_5:
        x7 == x6 goto endwhilemark1_5
            x9 = mem[x7 + 1216]
            mem[x7 + 1408] = x9
            x7 = x7 + 1
x0 == x0 goto startwhilemark1_5
        endwhilemark1_5:
        x28 = 0 + x0// return key
        x0 == x0 goto BlockProcess // Call function
        BlockProcessReturnGate0: // Return Gate 0
        x3 = mem[x0 + 1203]
        x8 = 3 + x0
        x3 != x8 goto endifmark1_0
            x6 = 64 + x0
            x7 = 0 + x0
startwhilemark1_6:
            x7 == x6 goto endwhilemark1_6
                x9 = mem[x7 + 1280]
                x5 = 2 + x0
                x9 = x9 >> x5
                mem[x7 + 1408] = x9
                x7 = x7 + 1
x0 == x0 goto startwhilemark1_6
            endwhilemark1_6:
            x28 = 1 + x0 // return key
            x0 == x0 goto BlockProcess // Call function
            BlockProcessReturnGate1: // Return Gate 1
            x6 = 64 + x0
            x7 = 0 + x0
startwhilemark1_7:
            x7 == x6 goto endwhilemark1_7
                x9 = mem[x7 + 1344]
                x5 = 2 + x0
                x9 = x9 >> x5
                mem[x7 + 1408] = x9
                x7 = x7 + 1
x0 == x0 goto startwhilemark1_7
            endwhilemark1_7:
            x28 = 2 + x0 // return key
            x0 == x0 goto BlockProcess // Call function
            BlockProcessReturnGate2: // Return Gate 2
            x6 = 64 + x0
            x7 = 0 + x0
startwhilemark1_8:
            x7 == x6 goto endwhilemark1_8
                mem[x7 + 1280] = x0
                mem[x7 + 1344] = x0
                x7 = x7 + 1
x0 == x0 goto startwhilemark1_8
            endwhilemark1_8:
            x3 = 0 + x0
            x0 == x0 goto endelse0
        endifmark1_0:
            x3 = x3 + 1
        endelse0:
        x2 = 0 + x0
        x1 = mem[x0 + 1201]
        x4 = mem[x0 + 1207]
        x0 == x0 goto endelse1
    endifmark0_16:
        x2 = x2 + 1
    endelse1:
    x1 = x1 + 1
x0 == x0 goto startwhilemark0_16
endwhilemark0_16:

// ------------------------------------------------------------------
// RegFile Work Aera 4: Post Process
// ------------------------------------------------------------------

x13 = x0 + 0
x1 = x0 + 1
startwhilemark0_17:
x26 == x0 goto endwhilemark0_17
    x13 = x13 << x1
    x13 = x13 + 1
    x26 = x26 + -1
x0 == x0 goto startwhilemark0_17
endwhilemark0_17:
x2 = mem[x25 + 0]
x13 = x13 + x2
mem[x25 + 0] = x13

// stop here, forever loop
EndOfProgram:
x0 == x0 goto EndOfProgram




