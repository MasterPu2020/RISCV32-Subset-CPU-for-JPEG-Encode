xmverilog(64): 21.03-s009: (c) Copyright 1995-2021 Cadence Design Systems, Inc.
TOOL:	xmverilog	21.03-s009: Started on Jul 22, 2023 at 23:16:08 BST
xmverilog
	../riscv/alu.sv
	../riscv/alucontrol.sv
	../riscv/control.sv
	../riscv/core.sv
	../riscv/immextend.sv
	../riscv/mux.sv
	../riscv/pc.sv
	../riscv/pccontrol.sv
	../riscv/ram.sv
	../riscv/regfile.sv
	../riscv/riscv32s.sv
	../riscv/rom.sv
	../riscv/stim.sv
	+access+r
	+xmtimescale+1ns/10ps
Loading snapshot worklib.stim:sv .................... Done
xmsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
xcelium> source /eda/cadence/xcelium/tools/xcelium/files/xmsimrc
xcelium> run
 [Core] x0 + 2 -> x1. pc=0 ----------> 0 + 2 = 2

 [Core] x0 + 2 -> x5. pc=1 ----------> 0 + 2 = 2

 [Core] x0 + 0 -> x2. pc=2 ----------> 0 + 0 = 0

 [Core] x0 + 31 -> x3. pc=3 ----------> 0 + 31 = 31

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 0 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 2 * 2 = 4

 [Core] r1 *h r5 -> r4. pc=6 ----------> (4 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[0] = 4

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[32] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 0 + 1 = 1

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 1 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 4 * 2 = 8

 [Core] r1 *h r5 -> r4. pc=6 ----------> (8 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[1] = 8

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[33] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 1 + 1 = 2

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 2 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 8 * 2 = 16

 [Core] r1 *h r5 -> r4. pc=6 ----------> (16 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[2] = 16

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[34] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 2 + 1 = 3

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 3 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 16 * 2 = 32

 [Core] r1 *h r5 -> r4. pc=6 ----------> (32 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[3] = 32

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[35] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 3 + 1 = 4

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 4 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 32 * 2 = 64

 [Core] r1 *h r5 -> r4. pc=6 ----------> (64 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[4] = 64

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[36] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 4 + 1 = 5

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 5 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 64 * 2 = 128

 [Core] r1 *h r5 -> r4. pc=6 ----------> (128 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[5] = 128

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[37] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 5 + 1 = 6

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 6 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 128 * 2 = 256

 [Core] r1 *h r5 -> r4. pc=6 ----------> (256 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[6] = 256

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[38] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 6 + 1 = 7

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 7 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 256 * 2 = 512

 [Core] r1 *h r5 -> r4. pc=6 ----------> (512 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[7] = 512

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[39] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 7 + 1 = 8

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 8 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 512 * 2 = 1024

 [Core] r1 *h r5 -> r4. pc=6 ----------> (1024 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[8] = 1024

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[40] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 8 + 1 = 9

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 9 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 1024 * 2 = 2048

 [Core] r1 *h r5 -> r4. pc=6 ----------> (2048 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[9] = 2048

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[41] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 9 + 1 = 10

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 10 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 2048 * 2 = 4096

 [Core] r1 *h r5 -> r4. pc=6 ----------> (4096 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[10] = 4096

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[42] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 10 + 1 = 11

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 11 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 4096 * 2 = 8192

 [Core] r1 *h r5 -> r4. pc=6 ----------> (8192 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[11] = 8192

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[43] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 11 + 1 = 12

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 12 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 8192 * 2 = 16384

 [Core] r1 *h r5 -> r4. pc=6 ----------> (16384 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[12] = 16384

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[44] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 12 + 1 = 13

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 13 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 16384 * 2 = 32768

 [Core] r1 *h r5 -> r4. pc=6 ----------> (32768 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[13] = 32768

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[45] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 13 + 1 = 14

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 14 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 32768 * 2 = 65536

 [Core] r1 *h r5 -> r4. pc=6 ----------> (65536 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[14] = 65536

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[46] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 14 + 1 = 15

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 15 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 65536 * 2 = 131072

 [Core] r1 *h r5 -> r4. pc=6 ----------> (131072 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[15] = 131072

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[47] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 15 + 1 = 16

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 16 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 131072 * 2 = 262144

 [Core] r1 *h r5 -> r4. pc=6 ----------> (262144 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[16] = 262144

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[48] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 16 + 1 = 17

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 17 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 262144 * 2 = 524288

 [Core] r1 *h r5 -> r4. pc=6 ----------> (524288 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[17] = 524288

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[49] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 17 + 1 = 18

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 18 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 524288 * 2 = 1048576

 [Core] r1 *h r5 -> r4. pc=6 ----------> (1048576 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[18] = 1048576

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[50] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 18 + 1 = 19

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 19 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 1048576 * 2 = 2097152

 [Core] r1 *h r5 -> r4. pc=6 ----------> (2097152 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[19] = 2097152

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[51] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 19 + 1 = 20

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 20 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 2097152 * 2 = 4194304

 [Core] r1 *h r5 -> r4. pc=6 ----------> (4194304 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[20] = 4194304

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[52] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 20 + 1 = 21

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 21 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 4194304 * 2 = 8388608

 [Core] r1 *h r5 -> r4. pc=6 ----------> (8388608 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[21] = 8388608

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[53] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 21 + 1 = 22

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 22 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 8388608 * 2 = 16777216

 [Core] r1 *h r5 -> r4. pc=6 ----------> (16777216 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[22] = 16777216

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[54] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 22 + 1 = 23

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 23 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 16777216 * 2 = 33554432

 [Core] r1 *h r5 -> r4. pc=6 ----------> (33554432 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[23] = 33554432

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[55] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 23 + 1 = 24

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 24 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 33554432 * 2 = 67108864

 [Core] r1 *h r5 -> r4. pc=6 ----------> (67108864 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[24] = 67108864

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[56] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 24 + 1 = 25

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 25 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 67108864 * 2 = 134217728

 [Core] r1 *h r5 -> r4. pc=6 ----------> (134217728 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[25] = 134217728

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[57] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 25 + 1 = 26

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 26 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 134217728 * 2 = 268435456

 [Core] r1 *h r5 -> r4. pc=6 ----------> (268435456 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[26] = 268435456

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[58] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 26 + 1 = 27

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 27 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 268435456 * 2 = 536870912

 [Core] r1 *h r5 -> r4. pc=6 ----------> (536870912 * 2)>>>31 = 1

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[27] = 536870912

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[59] = 1

 [Core] x2 + 1 -> x2. pc=9 ----------> 27 + 1 = 28

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 28 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 536870912 * 2 = 1073741824

 [Core] r1 *h r5 -> r4. pc=6 ----------> (1073741824 * 2)>>>31 = 2

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[28] = 1073741824

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[60] = 2

 [Core] x2 + 1 -> x2. pc=9 ----------> 28 + 1 = 29

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 29 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 1073741824 * 2 = 0

 [Core] r1 *h r5 -> r4. pc=6 ----------> (0 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[29] = 0

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[61] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 29 + 1 = 30

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 5. pc=4 ----------> 30 >= 31 ?

 [Core] x1 *l x5 -> x1. pc=5 ----------> 0 * 2 = 0

 [Core] r1 *h r5 -> r4. pc=6 ----------> (0 * 2)>>>31 = 0

 [Core] x1 -> mem[x2 + 0]. pc=7 ---------->  mem[30] = 0

 [Core] x4 -> mem[x2 + 32]. pc=8 ---------->  mem[62] = 0

 [Core] x2 + 1 -> x2. pc=9 ----------> 30 + 1 = 31

 [Core] x0 == x0 ? pc(10) + -6 = 4. pc=10 ----------> 0 == 0 ?

 [Core] x2 >= x3 ? pc(4) + 7 = 11. pc=4 ----------> 31 >= 31 ?

 [System]: Write log start, file opened. 411701 words
 [System]: Write log finished, file closed.
Memory Usage - Current physical: 43.9M, Current virtual: 214.7M
CPU Usage - 0.1s system + 0.2s user = 0.2s total (64.2% cpu)
Simulation complete via $finish(2) at time 2225 NS + 0
../riscv/stim.sv:129           $finish(2);
xcelium> exit
TOOL:	xmverilog	21.03-s009: Exiting on Jul 22, 2023 at 23:16:09 BST  (total: 00:00:01)
